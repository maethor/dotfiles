#!/bin/zsh
ssh_key_manage() {
	if [ -x "$(which keychain)" ] ; then
		# run keychain
		for i in $HOME/.ssh/id_[dr]sa; do keychain --nogui $i; done
		[[ -r $HOME/.ssh-agent-$(hostname) ]] && . $HOME/.ssh-agent-$(hostname)
		[[ -r $HOME/.keychain/$(hostname)-sh ]] &&  source $HOME/.keychain/$(hostname)-sh
	elif [ -x "$(which ssh-agent)" ]; then
		if [[ -r $HOME/.ssh/agent-pid ]] ; then
			if [[ -d /proc/$(< $HOME/.ssh/agent-pid) ]] ; then
				source $HOME/.ssh/agent
			else 
				ssh-agent -s > $HOME/.ssh/agent
				source $HOME/.ssh/agent
				echo $SSH_AGENT_PID > $HOME/.ssh/agent-pid
				for i in $(ls $HOME/.ssh/id_[dr]sa); do ssh-add $i; done
			fi	
		else 
			ssh-agent -s > $HOME/.ssh/agent
			source $HOME/.ssh/agent
			echo $SSH_AGENT_PID > $HOME/.ssh/agent-pid
			for i in $(ls $HOME/.ssh/id_[dr]sa); do ssh-add $i; done
		fi
	fi
}

# ssh key management
if [[ "$USER" != "root" ]]; then                                 
        export SSH_STATIC_AUTH_SOCK="/tmp/ssh-agent-$USER"       

	if [[ -z "$SSH_AUTH_SOCK" ]];                            
        then ssh_key_manage;                                     
        elif [[ "$SSH_AUTH_SOCK" != "$SSH_STATIC_AUTH_SOCK" ]]   
        then ln -sf "$SSH_AUTH_SOCK" "$SSH_STATIC_AUTH_SOCK"     
	        export SSH_AUTH_SOCK="$SSH_STATIC_AUTH_SOCK"     
        fi                                                       
        unset SSH_STATIC_AUTH_SOCK                               
fi                                                               

